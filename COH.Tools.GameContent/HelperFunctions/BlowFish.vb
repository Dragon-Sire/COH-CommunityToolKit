Namespace HelperFunctions.Cryptic
    Namespace Common.HelperFunctions.CrypticText
        Public Class DS_Cryptography_Blowfish
            Public Enum EncryptionModes As Byte
                ECB = 0
                CBC = 1
            End Enum
            Private P As UInteger()
            Private S(3)() As UInteger
            Private sBlowFishCypher As Byte()
            ReadOnly Property SBlocks As UInteger()()
                Get
                    Return S
                End Get
            End Property
            ReadOnly Property PBlock As UInteger()
                Get
                    Return P
                End Get
            End Property
            Public Sub New(ByVal BlowFishCypher As Byte())
                sBlowFishCypher = BlowFishCypher
                PrepareValues()
            End Sub

#Region "Initialization"
            Private Sub PrepareValues()
                Dim DataL As UInteger = 0, DataR As UInteger = 0
                P = New UInteger() {&H243F6A88, &H85A308D3UI, &H13198A2E, &H3707344, &HA4093822UI, &H299F31D0, &H82EFA98, &HEC4E6C89UI, &H452821E6, &H38D01377, &HBE5466CFUI, &H34E90C6C, &HC0AC29B7UI, &HC97C50DDUI, &H3F84D5B5, &HB5470917UI, &H9216D5D9UI, &H8979FB1BUI}
                ReDim S(3)
                S(0) = New UInteger() {&HD1310BA6UI, &H98DFB5ACUI, &H2FFD72DB, &HD01ADFB7UI, &HB8E1AFEDUI, &H6A267E96, &HBA7C9045UI, &HF12C7F99UI, &H24A19947, &HB3916CF7UI, &H801F2E2, &H858EFC16UI, &H636920D8, &H71574E69, &HA458FEA3UI, &HF4933D7EUI, &HD95748F, &H728EB658, &H718BCD58, &H82154AEEUI, &H7B54A41D, &HC25A59B5UI, &H9C30D539UI, &H2AF26013, &HC5D1B023UI, &H286085F0, &HCA417918UI, &HB8DB38EFUI, &H8E79DCB0UI, &H603A180E, &H6C9E0E8B, &HB01E8A3EUI, &HD71577C1UI, &HBD314B27UI, &H78AF2FDA, &H55605C60, &HE65525F3UI, &HAA55AB94UI, &H57489862, &H63E81440, &H55CA396A, &H2AAB10B6, &HB4CC5C34UI, &H1141E8CE, &HA15486AFUI, &H7C72E993, &HB3EE1411UI, &H636FBC2A, &H2BA9C55D, &H741831F6, &HCE5C3E16UI, &H9B87931EUI, &HAFD6BA33UI, &H6C24CF5C, &H7A325381, &H28958677, &H3B8F4898, &H6B4BB9AF, &HC4BFE81BUI, &H66282193, &H61D809CC, &HFB21A991UI, &H487CAC60, &H5DEC8032, &HEF845D5DUI, &HE98575B1UI, &HDC262302UI, &HEB651B88UI, &H23893E81, &HD396ACC5UI, &HF6D6FF3, &H83F44239UI, &H2E0B4482, &HA4842004UI, &H69C8F04A, &H9E1F9B5EUI, &H21C66842, &HF6E96C9AUI, &H670C9C61, &HABD388F0UI, &H6A51A0D2, &HD8542F68UI, &H960FA728UI, &HAB5133A3UI, &H6EEF0B6C, &H137A3BE4, &HBA3BF050UI, &H7EFB2A98, &HA1F1651DUI, &H39AF0176, &H66CA593E, &H82430E88UI, &H8CEE8619UI, &H456F9FB4, &H7D84A5C3, &H3B8B5EBE, &HE06F75D8UI, &H85C12073UI, &H401A449F, &H56C16AA6, &H4ED3AA62, &H363F7706, &H1BFEDF72, &H429B023D, &H37D0D724, &HD00A1248UI, &HDB0FEAD3UI, &H49F1C09B, &H75372C9, &H80991B7BUI, &H25D479D8, &HF6E8DEF7UI, &HE3FE501AUI, &HB6794C3BUI, &H976CE0BDUI, &H4C006BA, &HC1A94FB6UI, &H409F60C4, &H5E5C9EC2, &H196A2463, &H68FB6FAF, &H3E6C53B5, &H1339B2EB, &H3B52EC6F, &H6DFC511F, &H9B30952CUI, &HCC814544UI, &HAF5EBD09UI, &HBEE3D004UI, &HDE334AFDUI, &H660F2807, &H192E4BB3, &HC0CBA857UI, &H45C8740F, &HD20B5F39UI, &HB9D3FBDBUI, &H5579C0BD, &H1A60320A, &HD6A100C6UI, &H402C7279, &H679F25FE, &HFB1FA3CCUI, &H8EA5E9F8UI, &HDB3222F8UI, &H3C7516DF, &HFD616B15UI, &H2F501EC8, &HAD0552ABUI, &H323DB5FA, &HFD238760UI, &H53317B48, &H3E00DF82, &H9E5C57BBUI, &HCA6F8CA0UI, &H1A87562E, &HDF1769DBUI, &HD542A8F6UI, &H287EFFC3, &HAC6732C6UI, &H8C4F5573UI, &H695B27B0, &HBBCA58C8UI, &HE1FFA35DUI, &HB8F011A0UI, &H10FA3D98, &HFD2183B8UI, &H4AFCB56C, &H2DD1D35B, &H9A53E479UI, &HB6F84565UI, &HD28E49BCUI, &H4BFB9790, &HE1DDF2DAUI, &HA4CB7E33UI, &H62FB1341, &HCEE4C6E8UI, &HEF20CADAUI, &H36774C01, &HD07E9EFEUI, &H2BF11FB4, &H95DBDA4DUI, &HAE909198UI, &HEAAD8E71UI, &H6B93D5A0, &HD08ED1D0UI, &HAFC725E0UI, &H8E3C5B2FUI, &H8E7594B7UI, &H8FF6E2FBUI, &HF2122B64UI, &H8888B812UI, &H900DF01CUI, &H4FAD5EA0, &H688FC31C, &HD1CFF191UI, &HB3A8C1ADUI, &H2F2F2218, &HBE0E1777UI, &HEA752DFEUI, &H8B021FA1UI, &HE5A0CC0FUI, &HB56F74E8UI, &H18ACF3D6, &HCE89E299UI, &HB4A84FE0UI, &HFD13E0B7UI, &H7CC43B81, &HD2ADA8D9UI, &H165FA266, &H80957705UI, &H93CC7314UI, &H211A1477, &HE6AD2065UI, &H77B5FA86, &HC75442F5UI, &HFB9D35CFUI, &HEBCDAF0CUI, &H7B3E89A0, &HD6411BD3UI, &HAE1E7E49UI, &H250E2D, &H2071B35E, &H226800BB, &H57B8E0AF, &H2464369B, &HF009B91EUI, &H5563911D, &H59DFA6AA, &H78C14389, &HD95A537FUI, &H207D5BA2, &H2E5B9C5, &H83260376UI, &H6295CFA9, &H11C81968, &H4E734A41, &HB3472DCAUI, &H7B14A94A, &H1B510052, &H9A532915UI, &HD60F573FUI, &HBC9BC6E4UI, &H2B60A476, &H81E67400UI, &H8BA6FB5, &H571BE91F, &HF296EC6BUI, &H2A0DD915, &HB6636521UI, &HE7B9F9B6UI, &HFF34052EUI, &HC5855664UI, &H53B02D5D, &HA99F8FA1UI, &H8BA4799, &H6E85076A}
                S(1) = New UInteger() {&H4B7A70E9, &HB5B32944UI, &HDB75092EUI, &HC4192623UI, &HAD6EA6B0UI, &H49A7DF7D, &H9CEE60B8UI, &H8FEDB266UI, &HECAA8C71UI, &H699A17FF, &H5664526C, &HC2B19EE1UI, &H193602A5, &H75094C29, &HA0591340UI, &HE4183A3EUI, &H3F54989A, &H5B429D65, &H6B8FE4D6, &H99F73FD6UI, &HA1D29C07UI, &HEFE830F5UI, &H4D2D38E6, &HF0255DC1UI, &H4CDD2086, &H8470EB26UI, &H6382E9C6, &H21ECC5E, &H9686B3F, &H3EBAEFC9, &H3C971814, &H6B6A70A1, &H687F3584, &H52A0E286, &HB79C5305UI, &HAA500737UI, &H3E07841C, &H7FDEAE5C, &H8E7D44ECUI, &H5716F2B8, &HB03ADA37UI, &HF0500C0DUI, &HF01C1F04UI, &H200B3FF, &HAE0CF51AUI, &H3CB574B2, &H25837A58, &HDC0921BDUI, &HD19113F9UI, &H7CA92FF6, &H94324773UI, &H22F54701, &H3AE5E581, &H37C2DADC, &HC8B57634UI, &H9AF3DDA7UI, &HA9446146UI, &HFD0030E, &HECC8C73EUI, &HA4751E41UI, &HE238CD99UI, &H3BEA0E2F, &H3280BBA1, &H183EB331, &H4E548B38, &H4F6DB908, &H6F420D03, &HF60A04BFUI, &H2CB81290, &H24977C79, &H5679B072, &HBCAF89AFUI, &HDE9A771FUI, &HD9930810UI, &HB38BAE12UI, &HDCCF3F2EUI, &H5512721F, &H2E6B7124, &H501ADDE6, &H9F84CD87UI, &H7A584718, &H7408DA17, &HBC9F9ABCUI, &HE94B7D8CUI, &HEC7AEC3AUI, &HDB851DFAUI, &H63094366, &HC464C3D2UI, &HEF1C1847UI, &H3215D908, &HDD433B37UI, &H24C2BA16, &H12A14D43, &H2A65C451, &H50940002, &H133AE4DD, &H71DFF89E, &H10314E55, &H81AC77D6UI, &H5F11199B, &H43556F1, &HD7A3C76BUI, &H3C11183B, &H5924A509, &HF28FE6EDUI, &H97F1FBFAUI, &H9EBABF2CUI, &H1E153C6E, &H86E34570UI, &HEAE96FB1UI, &H860E5E0AUI, &H5A3E2AB3, &H771FE71C, &H4E3D06FA, &H2965DCB9, &H99E71D0FUI, &H803E89D6UI, &H5266C825, &H2E4CC978, &H9C10B36AUI, &HC6150EBAUI, &H94E2EA78UI, &HA5FC3C53UI, &H1E0A2DF4, &HF2F74EA7UI, &H361D2B3D, &H1939260F, &H19C27960, &H5223A708, &HF71312B6UI, &HEBADFE6EUI, &HEAC31F66UI, &HE3BC4595UI, &HA67BC883UI, &HB17F37D1UI, &H18CFF28, &HC332DDEFUI, &HBE6C5AA5UI, &H65582185, &H68AB9802, &HEECEA50FUI, &HDB2F953BUI, &H2AEF7DAD, &H5B6E2F84, &H1521B628, &H29076170, &HECDD4775UI, &H619F1510, &H13CCA830, &HEB61BD96UI, &H334FE1E, &HAA0363CFUI, &HB5735C90UI, &H4C70A239, &HD59E9E0BUI, &HCBAADE14UI, &HEECC86BCUI, &H60622CA7, &H9CAB5CABUI, &HB2F3846EUI, &H648B1EAF, &H19BDF0CA, &HA02369B9UI, &H655ABB50, &H40685A32, &H3C2AB4B3, &H319EE9D5, &HC021B8F7UI, &H9B540B19UI, &H875FA099UI, &H95F7997EUI, &H623D7DA8, &HF837889AUI, &H97E32D77UI, &H11ED935F, &H16681281, &HE358829, &HC7E61FD6UI, &H96DEDFA1UI, &H7858BA99, &H57F584A5, &H1B227263, &H9B83C3FFUI, &H1AC24696, &HCDB30AEBUI, &H532E3054, &H8FD948E4UI, &H6DBC3128, &H58EBF2EF, &H34C6FFEA, &HFE28ED61UI, &HEE7C3C73UI, &H5D4A14D9, &HE864B7E3UI, &H42105D14, &H203E13E0, &H45EEE2B6, &HA3AAABEAUI, &HDB6C4F15UI, &HFACB4FD0UI, &HC742F442UI, &HEF6ABBB5UI, &H654F3B1D, &H41CD2105, &HD81E799EUI, &H86854DC7UI, &HE44B476AUI, &H3D816250, &HCF62A1F2UI, &H5B8D2646, &HFC8883A0UI, &HC1C7B6A3UI, &H7F1524C3, &H69CB7492, &H47848A0B, &H5692B285, &H95BBF00, &HAD19489DUI, &H1462B174, &H23820E00, &H58428D2A, &HC55F5EA, &H1DADF43E, &H233F7061, &H3372F092, &H8D937E41UI, &HD65FECF1UI, &H6C223BDB, &H7CDE3759, &HCBEE7460UI, &H4085F2A7, &HCE77326EUI, &HA6078084UI, &H19F8509E, &HE8EFD855UI, &H61D99735, &HA969A7AAUI, &HC50C06C2UI, &H5A04ABFC, &H800BCADCUI, &H9E447A2EUI, &HC3453484UI, &HFDD56705UI, &HE1E9EC9, &HDB73DBD3UI, &H105588CD, &H675FDA79, &HE3674340UI, &HC5C43465UI, &H713E38D8, &H3D28F89E, &HF16DFF20UI, &H153E21E7, &H8FB03D4AUI, &HE6E39F2BUI, &HDB83ADF7UI}
                S(2) = New UInteger() {&HE93D5A68UI, &H948140F7UI, &HF64C261CUI, &H94692934UI, &H411520F7, &H7602D4F7, &HBCF46B2EUI, &HD4A20068UI, &HD4082471UI, &H3320F46A, &H43B7D4B7, &H500061AF, &H1E39F62E, &H97244546UI, &H14214F74, &HBF8B8840UI, &H4D95FC1D, &H96B591AFUI, &H70F4DDD3, &H66A02F45, &HBFBC09ECUI, &H3BD9785, &H7FAC6DD0, &H31CB8504, &H96EB27B3UI, &H55FD3941, &HDA2547E6UI, &HABCA0A9AUI, &H28507825, &H530429F4, &HA2C86DA, &HE9B66DFBUI, &H68DC1462, &HD7486900UI, &H680EC0A4, &H27A18DEE, &H4F3FFEA2, &HE887AD8CUI, &HB58CE006UI, &H7AF4D6B6, &HAACE1E7CUI, &HD3375FECUI, &HCE78A399UI, &H406B2A42, &H20FE9E35, &HD9F385B9UI, &HEE39D7ABUI, &H3B124E8B, &H1DC9FAF7, &H4B6D1856, &H26A36631, &HEAE397B2UI, &H3A6EFA74, &HDD5B4332UI, &H6841E7F7, &HCA7820FBUI, &HFB0AF54EUI, &HD8FEB397UI, &H454056AC, &HBA489527UI, &H55533A3A, &H20838D87, &HFE6BA9B7UI, &HD096954BUI, &H55A867BC, &HA1159A58UI, &HCCA92963UI, &H99E1DB33UI, &HA62A4A56UI, &H3F3125F9, &H5EF47E1C, &H9029317CUI, &HFDF8E802UI, &H4272F70, &H80BB155CUI, &H5282CE3, &H95C11548UI, &HE4C66D22UI, &H48C1133F, &HC70F86DCUI, &H7F9C9EE, &H41041F0F, &H404779A4, &H5D886E17, &H325F51EB, &HD59BC0D1UI, &HF2BCC18FUI, &H41113564, &H257B7834, &H602A9C60, &HDFF8E8A3UI, &H1F636C1B, &HE12B4C2, &H2E1329E, &HAF664FD1UI, &HCAD18115UI, &H6B2395E0, &H333E92E1, &H3B240B62, &HEEBEB922UI, &H85B2A20EUI, &HE6BA0D99UI, &HDE720C8CUI, &H2DA2F728, &HD0127845UI, &H95B794FDUI, &H647D0862, &HE7CCF5F0UI, &H5449A36F, &H877D48FAUI, &HC39DFD27UI, &HF33E8D1EUI, &HA476341, &H992EFF74UI, &H3A6F6EAB, &HF4F8FD37UI, &HA812DC60UI, &HA1EBDDF8UI, &H991BE14CUI, &HDB6E6B0DUI, &HC67B5510UI, &H6D672C37, &H2765D43B, &HDCD0E804UI, &HF1290DC7UI, &HCC00FFA3UI, &HB5390F92UI, &H690FED0B, &H667B9FFB, &HCEDB7D9CUI, &HA091CF0BUI, &HD9155EA3UI, &HBB132F88UI, &H515BAD24, &H7B9479BF, &H763BD6EB, &H37392EB3, &HCC115979UI, &H8026E297UI, &HF42E312DUI, &H6842ADA7, &HC66A2B3BUI, &H12754CCC, &H782EF11C, &H6A124237, &HB79251E7UI, &H6A1BBE6, &H4BFB6350, &H1A6B1018, &H11CAEDFA, &H3D25BDD8, &HE2E1C3C9UI, &H44421659, &HA121386, &HD90CEC6EUI, &HD5ABEA2AUI, &H64AF674E, &HDA86A85FUI, &HBEBFE988UI, &H64E4C3FE, &H9DBC8057UI, &HF0F7C086UI, &H60787BF8, &H6003604D, &HD1FD8346UI, &HF6381FB0UI, &H7745AE04, &HD736FCCCUI, &H83426B33UI, &HF01EAB71UI, &HB0804187UI, &H3C005E5F, &H77A057BE, &HBDE8AE24UI, &H55464299, &HBF582E61UI, &H4E58F48F, &HF2DDFDA2UI, &HF474EF38UI, &H8789BDC2UI, &H5366F9C3, &HC8B38E74UI, &HB475F255UI, &H46FCD9B9, &H7AEB2661, &H8B1DDF84UI, &H846A0E79UI, &H915F95E2UI, &H466E598E, &H20B45770, &H8CD55591UI, &HC902DE4CUI, &HB90BACE1UI, &HBB8205D0UI, &H11A86248, &H7574A99E, &HB77F19B6UI, &HE0A9DC09UI, &H662D09A1, &HC4324633UI, &HE85A1F02UI, &H9F0BE8C, &H4A99A025, &H1D6EFE10, &H1AB93D1D, &HBA5A4DF, &HA186F20FUI, &H2868F169, &HDCB7DA83UI, &H573906FE, &HA1E2CE9BUI, &H4FCD7F52, &H50115E01, &HA70683FAUI, &HA002B5C4UI, &HDE6D027, &H9AF88C27UI, &H773F8641, &HC3604C06UI, &H61A806B5, &HF0177A28UI, &HC0F586E0UI, &H6058AA, &H30DC7D62, &H11E69ED7, &H2338EA63, &H53C2DD94, &HC2C21634UI, &HBBCBEE56UI, &H90BCB6DEUI, &HEBFC7DA1UI, &HCE591D76UI, &H6F05E409, &H4B7C0188, &H39720A3D, &H7C927C24, &H86E3725FUI, &H724D9DB9, &H1AC15BB4, &HD39EB8FCUI, &HED545578UI, &H8FCA5B5, &HD83D7CD3UI, &H4DAD0FC4, &H1E50EF5E, &HB161E6F8UI, &HA28514D9UI, &H6C51133C, &H6FD5C7E7, &H56E14EC4, &H362ABFCE, &HDDC6C837UI, &HD79A3234UI, &H92638212UI, &H670EFA8E, &H406000E0}
                S(3) = New UInteger() {&H3A39CE37, &HD3FAF5CFUI, &HABC27737UI, &H5AC52D1B, &H5CB0679E, &H4FA33742, &HD3822740UI, &H99BC9BBEUI, &HD5118E9DUI, &HBF0F7315UI, &HD62D1C7EUI, &HC700C47BUI, &HB78C1B6BUI, &H21A19045, &HB26EB1BEUI, &H6A366EB4, &H5748AB2F, &HBC946E79UI, &HC6A376D2UI, &H6549C2C8, &H530FF8EE, &H468DDE7D, &HD5730A1DUI, &H4CD04DC6, &H2939BBDB, &HA9BA4650UI, &HAC9526E8UI, &HBE5EE304UI, &HA1FAD5F0UI, &H6A2D519A, &H63EF8CE2, &H9A86EE22UI, &HC089C2B8UI, &H43242EF6, &HA51E03AAUI, &H9CF2D0A4UI, &H83C061BAUI, &H9BE96A4DUI, &H8FE51550UI, &HBA645BD6UI, &H2826A2F9, &HA73A3AE1UI, &H4BA99586, &HEF5562E9UI, &HC72FEFD3UI, &HF752F7DAUI, &H3F046F69, &H77FA0A59, &H80E4A915UI, &H87B08601UI, &H9B09E6ADUI, &H3B3EE593, &HE990FD5AUI, &H9E34D797UI, &H2CF0B7D9, &H22B8B51, &H96D5AC3AUI, &H17DA67D, &HD1CF3ED6UI, &H7C7D2D28, &H1F9F25CF, &HADF2B89BUI, &H5AD6B472, &H5A88F54C, &HE029AC71UI, &HE019A5E6UI, &H47B0ACFD, &HED93FA9BUI, &HE8D3C48DUI, &H283B57CC, &HF8D56629UI, &H79132E28, &H785F0191, &HED756055UI, &HF7960E44UI, &HE3D35E8CUI, &H15056DD4, &H88F46DBAUI, &H3A16125, &H564F0BD, &HC3EB9E15UI, &H3C9057A2, &H97271AECUI, &HA93A072AUI, &H1B3F6D9B, &H1E6321F5, &HF59C66FBUI, &H26DCF319, &H7533D928, &HB155FDF5UI, &H3563482, &H8ABA3CBBUI, &H28517711, &HC20AD9F8UI, &HABCC5167UI, &HCCAD925FUI, &H4DE81751, &H3830DC8E, &H379D5862, &H9320F991UI, &HEA7A90C2UI, &HFB3E7BCEUI, &H5121CE64, &H774FBE32, &HA8B6E37EUI, &HC3293D46UI, &H48DE5369, &H6413E680, &HA2AE0810UI, &HDD6DB224UI, &H69852DFD, &H9072166, &HB39A460AUI, &H6445C0DD, &H586CDECF, &H1C20C8AE, &H5BBEF7DD, &H1B588D40, &HCCD2017FUI, &H6BB4E3BB, &HDDA26A7EUI, &H3A59FF45, &H3E350A44, &HBCB4CDD5UI, &H72EACEA8, &HFA6484BBUI, &H8D6612AEUI, &HBF3C6F47UI, &HD29BE463UI, &H542F5D9E, &HAEC2771BUI, &HF64E6370UI, &H740E0D8D, &HE75B1357UI, &HF8721671UI, &HAF537D5DUI, &H4040CB08, &H4EB4E2CC, &H34D2466A, &H115AF84, &HE1B00428UI, &H95983A1DUI, &H6B89FB4, &HCE6EA048UI, &H6F3F3B82, &H3520AB82, &H11A1D4B, &H277227F8, &H611560B1, &HE7933FDCUI, &HBB3A792BUI, &H344525BD, &HA08839E1UI, &H51CE794B, &H2F32C9B7, &HA01FBAC9UI, &HE01CC87EUI, &HBCC7D1F6UI, &HCF0111C3UI, &HA1E8AAC7UI, &H1A908749, &HD44FBD9AUI, &HD0DADECBUI, &HD50ADA38UI, &H339C32A, &HC6913667UI, &H8DF9317CUI, &HE0B12B4FUI, &HF79E59B7UI, &H43F5BB3A, &HF2D519FFUI, &H27D9459C, &HBF97222CUI, &H15E6FC2A, &HF91FC71, &H9B941525UI, &HFAE59361UI, &HCEB69CEBUI, &HC2A86459UI, &H12BAA8D1, &HB6C1075EUI, &HE3056A0CUI, &H10D25065, &HCB03A442UI, &HE0EC6E0EUI, &H1698DB3B, &H4C98A0BE, &H3278E964, &H9F1F9532UI, &HE0D392DFUI, &HD3A0342BUI, &H8971F21EUI, &H1B0A7441, &H4BA3348C, &HC5BE7120UI, &HC37632D8UI, &HDF359F8DUI, &H9B992F2EUI, &HE60B6F47UI, &HFE3F11D, &HE54CDA54UI, &H1EDAD891, &HCE6279CFUI, &HCD3E7E6FUI, &H1618B166, &HFD2C1D05UI, &H848FD2C5UI, &HF6FB2299UI, &HF523F357UI, &HA6327623UI, &H93A83531UI, &H56CCCD02, &HACF08162UI, &H5A75EBB5, &H6E163697, &H88D273CCUI, &HDE966292UI, &H81B949D0UI, &H4C50901B, &H71C65614, &HE6C6C7BDUI, &H327A140A, &H45E1D006, &HC3F27B9AUI, &HC9AA53FDUI, &H62A80F00, &HBB25BFE2UI, &H35BDD2F6, &H71126905, &HB2040222UI, &HB6CBCF7CUI, &HCD769C2BUI, &H53113EC0, &H1640E3D3, &H38ABBD60, &H2547ADF0, &HBA38209CUI, &HF746CE76UI, &H77AFA1C5, &H20756060, &H85CBFE4EUI, &H8AE88DD8UI, &H7AAAF9B0, &H4CF9AA7E, &H1948C25C, &H2FB8A8C, &H1C36AE4, &HD6EBE1F9UI, &H90D4F869UI, &HA65CDEA0UI, &H3F09252D, &HC208E69FUI, &HB74E6132UI, &HCE77E25BUI, &H578FDFE3, &H3AC372E6}
                PrepareValues_P(DataL, DataR)
                PrepareValues_S(DataL, DataR)
            End Sub
            Private Sub PrepareValues_P(ByRef DataL As UInteger, ByRef DataR As UInteger)
                Dim Data As UInteger = 0, JumpValue As Short = 0
                For i = 0 To 17
                    Data = CUInt(((sBlowFishCypher(JumpValue Mod sBlowFishCypher.Length) * 256 + sBlowFishCypher((JumpValue + 1) Mod sBlowFishCypher.Length)) * 256 + sBlowFishCypher((JumpValue + 2) Mod sBlowFishCypher.Length)) * 256 + sBlowFishCypher((JumpValue + 3) Mod sBlowFishCypher.Length))
                    P(i) = P(i) Xor Data
                    JumpValue = (JumpValue + 4) Mod sBlowFishCypher.Length
                Next
                For i = 0 To 17 Step 2
                    Encipher(DataL, DataR)
                    P(i) = DataL
                    P(i + 1) = DataR
                Next
            End Sub
            Private Sub PrepareValues_S(ByRef DataL As UInteger, ByRef DataR As UInteger)
                For X = 0 To 3
                    For N = 0 To 255 Step 2
                        Encipher(DataL, DataR)
                        S(X)(N) = DataL
                        S(X)(N + 1) = DataR
                    Next
                Next
            End Sub
            Private Sub Encipher(ByRef DataL As UInteger, ByRef DataR As UInteger)
                For i = 0 To 15
                    DataL = DataL Xor P(i)
                    DataR = FFunction(DataL) Xor DataR
                    SwapValues(DataL, DataR)
                Next
                SwapValues(DataL, DataR)
                DataR = DataR Xor P(16)
                DataL = DataL Xor P(17)
            End Sub
            Private Sub SwapValues(ByRef Value1 As UInt32, ByRef Value2 As UInt32)
                Dim TempValue As UInteger = Value2
                Value2 = Value1
                Value1 = TempValue
            End Sub
            Private Function FFunction(ByVal Value As UInteger) As UInteger
                Dim Result As ULong
                Dim ByteValues As Byte() = BitConverter.GetBytes(Value)
                Result = CULng(S(0)(ByteValues(3)) + CULng(S(1)(ByteValues(2)))) : If Result > UInteger.MaxValue Then Result = Result - (UInteger.MaxValue + 1)
                Result = Result Xor S(2)(ByteValues(1)) : If Result > UInteger.MaxValue Then Result = Result - (UInteger.MaxValue + 1)
                Result = Result + S(3)(ByteValues(0)) : If Result > UInteger.MaxValue Then Result = Result - (UInteger.MaxValue + 1)
                Return Result
            End Function
            Private Sub Decipher(ByRef DataL As UInteger, ByRef DataR As UInteger)
                For i = 17 To 2 Step -1
                    DataL = DataL Xor P(i)
                    DataR = FFunction(DataL) Xor DataR
                    SwapValues(DataL, DataR)
                Next
                SwapValues(DataL, DataR)
                DataR = DataR Xor P(1)
                DataL = DataL Xor P(0)
            End Sub
#End Region

#Region "Public Usage"
            Public Function Encrypt(ByVal TheBytes As Byte(), ByVal Mode As EncryptionModes) As Byte()
                Dim NewBytes As Byte() = TheBytes.Clone
                Select Case Mode
                    Case EncryptionModes.ECB
                        Return Perform_Encrypt_ECB(NewBytes)
                    Case EncryptionModes.CBC
                        'Return Perform_EncyptDecrypt_CBC(TheBytes)
                    Case Else
                        Return Nothing
                End Select
                Return Nothing
            End Function
            Public Function Decrypt(ByVal TheBytes As Byte(), ByVal Mode As EncryptionModes) As Byte()
                Dim NewBytes As Byte() = TheBytes.Clone
                Select Case Mode
                    Case EncryptionModes.ECB
                        Return Perform_Decrypt_ECB(NewBytes)
                    Case EncryptionModes.CBC
                        'Return Perform_EncyptDecrypt_CBC(TheBytes, False)
                    Case Else
                        Return Nothing
                End Select
                Return Nothing
            End Function
#End Region

#Region "Private Usage"
            Private Function Perform_Encrypt_ECB(ByVal Data As Byte()) As Byte()
                Dim xl As UInteger, xr As UInteger
                If (Data.Length Mod 8) <> 0 Then Throw New Exception("Invalid Length")
                For i As Integer = 0 To Data.Length - 1 Step 8
                    xl = (CUInt(Data(i)) << 24) Or (CUInt(Data(i + 1)) << 16) Or (CUInt(Data(i + 2)) << 8) Or Data(i + 3)
                    xr = (CUInt(Data(i + 4)) << 24) Or (CUInt(Data(i + 5)) << 16) Or (CUInt(Data(i + 6)) << 8) Or Data(i + 7)
                    Encipher(xl, xr)

                    Dim Q As String = HexIT(xl)
                    Data(i) = CInt("&H" & Q.Substring(1, 2))
                    Data(i + 1) = CInt("&H" & Q.Substring(3, 2))
                    Data(i + 2) = CInt("&H" & Q.Substring(5, 2))
                    Data(i + 3) = CInt("&H" & Q.Substring(7, 2))

                    Q = HexIT(xr)
                    Data(i + 4) = CInt("&H" & Q.Substring(1, 2))
                    Data(i + 5) = CInt("&H" & Q.Substring(3, 2))
                    Data(i + 6) = CInt("&H" & Q.Substring(5, 2))
                    Data(i + 7) = CInt("&H" & Q.Substring(7, 2))
                Next i
                Return Data
            End Function
            Private Function Perform_Decrypt_ECB(ByVal Data As Byte()) As Byte()
                Dim xl As UInteger, xr As UInteger
                If (Data.Length Mod 8) <> 0 Then Throw New Exception("Invalid Length")
                For i As Integer = 0 To Data.Length - 1 Step 8
                    xl = (CUInt(Data(i)) << 24) Or (CUInt(Data(i + 1)) << 16) Or (CUInt(Data(i + 2)) << 8) Or Data(i + 3)
                    xr = (CUInt(Data(i + 4)) << 24) Or (CUInt(Data(i + 5)) << 16) Or (CUInt(Data(i + 6)) << 8) Or Data(i + 7)
                    Decipher(xl, xr)
                    Dim Q As String = HexIT(xl)
                    Data(i) = CInt("&H" & Q.Substring(1, 2))
                    Data(i + 1) = CInt("&H" & Q.Substring(3, 2))
                    Data(i + 2) = CInt("&H" & Q.Substring(5, 2))
                    Data(i + 3) = CInt("&H" & Q.Substring(7, 2))

                    Q = HexIT(xr)
                    Data(i + 4) = CInt("&H" & Q.Substring(1, 2))
                    Data(i + 5) = CInt("&H" & Q.Substring(3, 2))
                    Data(i + 6) = CInt("&H" & Q.Substring(5, 2))
                    Data(i + 7) = CInt("&H" & Q.Substring(7, 2))
                Next
                Return Data
            End Function
            Private Function HexIT(Value As UInt32) As String
                Dim Result As String = Value.ToString("X8").PadLeft(8, "0")  '  Hex(Value)
                Return Result
            End Function
#End Region
        End Class
    End Namespace

End Namespace